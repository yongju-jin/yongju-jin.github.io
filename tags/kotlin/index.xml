<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kotlin on 전문 초보 개발자</title>
    <link>https://yongju-jin.github.io/tags/kotlin/</link>
    <description>Recent content in kotlin on 전문 초보 개발자</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>yong8521@gmail.com</managingEditor>
    <webMaster>yong8521@gmail.com</webMaster>
    <lastBuildDate>Wed, 11 Sep 2019 21:41:27 +0900</lastBuildDate>
    
	<atom:link href="https://yongju-jin.github.io/tags/kotlin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>코루틴 공부 #1</title>
      <link>https://yongju-jin.github.io/post/learn_coroutines_1/</link>
      <pubDate>Wed, 11 Sep 2019 21:41:27 +0900</pubDate>
      <author>yong8521@gmail.com</author>
      <guid>https://yongju-jin.github.io/post/learn_coroutines_1/</guid>
      <description>스스로 공부한 코루틴에 대한 내용 정리.
1. 특징 1. 비동기 프로그래밍을 쉽게 할 수 있도록 도와줌 아래 코드처럼 쉽게 비동기 수행을 작성할 수 있음.
lauch { } async { } withContext { } 2. 쓰레드를 사용하는 것보다 가벼움 쓰레드, 코루틴을 1대1로 비교한다면 코루틴은 새로운 쓰레드를 생성하지 않기 때문에 쓰레드를 사용하는 것보단 비교적 가볍다.
3. 일반적인 형태의 소스코도와 동일한 방식으로 코드 작성이 가능함 아래와 같이 일반적인 형태의 코드로 작성이 가능함.</description>
    </item>
    
  </channel>
</rss>