<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android on 전문 초보 개발자</title>
    <link>https://yongju-jin.github.io/tags/android/</link>
    <description>Recent content in android on 전문 초보 개발자</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>yong8521@gmail.com</managingEditor>
    <webMaster>yong8521@gmail.com</webMaster>
    <lastBuildDate>Mon, 12 Nov 2018 17:56:29 +0900</lastBuildDate>
    
	<atom:link href="https://yongju-jin.github.io/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>하면서 배운것들 #1</title>
      <link>https://yongju-jin.github.io/post/know-when-worked-1/</link>
      <pubDate>Mon, 12 Nov 2018 17:56:29 +0900</pubDate>
      <author>yong8521@gmail.com</author>
      <guid>https://yongju-jin.github.io/post/know-when-worked-1/</guid>
      <description>Databinding &amp;amp; drawable databindig에서 drawable을 지정해줘야 할 필요가 있는 경우 아래와 같이 사용할 수 있음.
app:imageRes=&amp;#34;@{vm.isListType ? @drawable/list : @drawable/card}&amp;#34; drawable을 지정할 떄는 @drawable/filename 이렇게 사용할 수 있음.
위와 같이 isLisType이 변경될 떄 drawable resource도 변경되도록 할 수 있음.
imageRes adapter는
@BindingAdapter(&amp;#34;imageRes&amp;#34;) fun ImageView.setImageRes(drawable: Drawable?) { GlideApp.with(this.context).load(drawable) .error(R.drawable.circle_wrap) .diskCacheStrategy(DiskCacheStrategy.AUTOMATIC).into(this) } parameter를 Drawable로 받아서 처리하면 됨.</description>
    </item>
    
    <item>
      <title>[RxBinding2] ToggleButton에서 on/off Observable 생성하기.</title>
      <link>https://yongju-jin.github.io/post/rxbinding-toggle/</link>
      <pubDate>Sun, 12 Nov 2017 17:56:29 +0900</pubDate>
      <author>yong8521@gmail.com</author>
      <guid>https://yongju-jin.github.io/post/rxbinding-toggle/</guid>
      <description>[RxBinding2] ToggleButton에서 on/off Observable 생성하기. toggle button 에서 on/off Observabel을 분리하기 위해서 아래와 같이 하면
val obFuel1 = tb_fuel1.checkedChanges() obFuel1.filter { Log.d(TAG, &amp;#34;[whenFueLift] $it&amp;#34;) it }.subscribe { Log.d(TAG, &amp;#34;[whenFueLiftSub] $it&amp;#34;) } obFuel1.filter { Log.d(TAG, &amp;#34;[whenFueDown] $it&amp;#34;) !it }.subscribe { Log.d(TAG, &amp;#34;[whenFueDownSub] $it&amp;#34;) }D/FuelPump01: [whenFueLift] false D/FuelPump01: [whenFueDown] false D/FuelPump01: [whenFueDownSub] false D/FuelPump01: [whenFueDown] true D/FuelPump01: [whenFueDown] false D/FuelPump01: [whenFueDownSub] false 위와 같은 결과를 얻게 된다. 하나의 Observabe에 여러개의 subscriber가 붙을 수는 없다.</description>
    </item>
    
  </channel>
</rss>